- name: Configure HAProxy with kubectl-based pod health check
  hosts: haproxy
  vars:
    app_label: "app=my-app"
    namespace: "default"
    haproxy_conf_dir: "/etc/haproxy"
    worker_nodes: ["worker1", "worker2", "worker3"]  # Replace with actual worker node names/IPs
  tasks:
    - name: Check pod status on worker nodes
      ansible.builtin.command: kubectl get pods -l {{ app_label }} -n {{ namespace }} -o json
      register: pod_status
      changed_when: false
      delegate_to: localhost
      failed_when: pod_status.rc != 0

    - name: Identify healthy nodes with running pods
      ansible.builtin.set_fact:
        healthy_nodes: "{{ pod_status.stdout | from_json | json_query('items[?status.phase==`Running`].spec.nodeName') | unique | intersect(worker_nodes) }}"

    - name: Update HAProxy configuration
      ansible.builtin.template:
        src: haproxy.cfg.j2
        dest: "{{ haproxy_conf_dir }}/haproxy.cfg"
        mode: '0644'
      notify: Restart HAProxy

  handlers:
    - name: Restart HAProxy
      ansible.builtin.service:
        name: haproxy
        state: restarted
