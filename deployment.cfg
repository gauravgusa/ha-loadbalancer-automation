FLOATING_IP=192.168.1.200
PRIMARY_IP=192.168.1.27
SECONDARY_IP=192.168.1.32
VRID=51
STATE=MASTER
PRIORITY=200
HAPROXY_PORT=8080
INTERFACE=eth0


#!/bin/bash

# Define the path to your deployment.cfg file
CONFIG_FILE="deployment.cfg"

# Check if the config file exists
if [[ -f "$CONFIG_FILE" ]]; then
    echo "Reading configuration from $CONFIG_FILE..."
    # Read the configuration file directly
    source "$CONFIG_FILE"

    # Now you can use the variables, for example:
    echo "FLOATING_IP: $FLOATING_IP"
    echo "PRIMARY_IP: $PRIMARY_IP"
    echo "SECONDARY_IP: $SECONDARY_IP"
    echo "VRID: $VRID"
    echo "STATE: $STATE"
    echo "PRIORITY: $PRIORITY"
    echo "HAPROXY_PORT: $HAPROXY_PORT"
    echo "INTERFACE: $INTERFACE"

    # Example of using a variable in a command
    # For instance, if you need to use the INTERFACE for 'ip addr show'
    # echo "Checking IP address for interface $INTERFACE:"
    # ip addr show "$INTERFACE" | grep "inet "

    # Add your existing dependency collection logic here,
    # now incorporating the variables from deployment.cfg

    # Example: Check for keepalived and haproxy based on configurations
    # if command -v keepalived &> /dev/null; then
    #     echo "keepalived is installed."
    #     # You might use $VRID, $STATE, $PRIORITY here for checks
    # fi

    # if command -v haproxy &> /dev/null; then
    #     echo "haproxy is installed."
    #     # You might use $HAPROXY_PORT here for checks
    # fi

else
    echo "Error: Configuration file '$CONFIG_FILE' not found."
    echo "Please make sure deployment.cfg is in the same directory or provide the correct path."
    exit 1
fi

# Continue with the rest of your dependency_collector.sh logic here
# ...
